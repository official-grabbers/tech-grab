<!-- views/base.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        Technologies | Grabbers
    </title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>

<body>
    <main
        class="bg-gradient-to-r from-green-400 to-indigo-400 text-center h-screen flex justify-center items-center py-10 px-10">
        <div class="md:flex">
            <%- include('nav') %>
                <div
                    class="w-full p-6 bg-gray-50 text-medium text-gray-500 dark:text-gray-400 dark:bg-gray-800 grid justify-center items-center rounded-lg w-full">
                    <h1
                        class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-5xl dark:text-white">
                        Let's Grab <span id="heading" class="text-blue-600 dark:text-blue-500">
                            <%= typeof results !== 'undefined' && results.url ? (extractDomain(results.url)[0].toUpperCase() + extractDomain(results.url).slice(1)) : 'Example.com' %>
                        </span>
                    </h1>
                    <hr class="h-px bg-gray-400 border-0 rounded dark:bg-gray-700">
                    <% if (typeof error !== 'undefined') { %>
                        <p class="text-red-600">
                            <span class="font-bold">ERROR: </span>
                            <%= error %>
                        </p>
                    <% } %>
                    <% if (typeof results !== 'undefined') { %>
                        <div class="results">
                            <% results.technologies.technologies.forEach(tech => { %>
                                <span class="text-xs mx-2 my-1 font-medium me-2 px-2.5 py-0.5 rounded <%= getRandomColorClass(tech) %>">
                                    <strong><%= tech.name %>:</strong> <%= tech.confidence %>%
                                </span>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <form action="/tech-stack" method="POST" id="inline-form" class="flex justify-between"> 
                            <input type="url" required id="website" 
                            name="website" 
                            aria-describedby="helper-text-explanation" class="mr-10 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  me-2 mb-2  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="https://www.example.com" value="https://www.example.com">
                            <button type="submit" class="text-blue-900 hover:text-white border border-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-600 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-blue-600 dark:text-blue-600 dark:hover:text-white dark:hover:bg-blue-600 dark:focus:ring-blue-800" >Grab</button>
                        </form>
                    <% } %>
                </div>
        </div>
    </main>
    <script>

        document.getElementById('inline-form').addEventListener('submit', (event) => event.target.querySelector('button[type="submit"]').setAttribute('disabled', 'disabled'));

        // Select the input element
        const inputElement = document.getElementById('website');
        const headingElement = document.getElementById('heading');

        inputElement.addEventListener('input', () => {
            const domain = extractDomain(inputElement.value);
            const updatedDomain = domain[0].toUpperCase() + domain.slice(1)
            headingElement.textContent = updatedDomain;
        });

        function extractDomain(url) {
            let domain = url.replace(/^https?:\/\//, '').replace(/^www\./, '');
            domain = domain.split('/')[0];
            return domain;
        }
    </script>
    <%
    // Define a function to generate a random color class
    function getRandomColorClass() {
        const colorClasses = [
            'bg-blue-100 text-blue-800',
            'bg-gray-100 text-gray-800',
            'bg-red-100 text-red-800',
            'bg-green-100 text-green-800',
            'bg-yellow-100 text-yellow-800',
            'bg-indigo-100 text-indigo-800',
            'bg-pink-100 text-pink-800',
            'bg-blue-100 text-blue-800',
            'bg-gray-100 text-gray-800',
            'bg-red-100 text-red-800',
            'bg-green-100 text-green-800',
            'bg-yellow-100 text-yellow-800',
            'bg-indigo-100 text-indigo-800',
            'bg-pink-100 text-pink-800',
            'bg-blue-100 text-blue-800',
            'bg-gray-100 text-gray-800',
            'bg-red-100 text-red-800',
            'bg-green-100 text-green-800',
            'bg-yellow-100 text-yellow-800',
            'bg-indigo-100 text-indigo-800',
            'bg-pink-100 text-pink-800',
            'bg-blue-100 text-blue-800',
            'bg-gray-100 text-gray-800',
            'bg-red-100 text-red-800',
            'bg-green-100 text-green-800',
            'bg-yellow-100 text-yellow-800',
            'bg-indigo-100 text-indigo-800',
            'bg-pink-100 text-pink-800',
            'bg-blue-100 text-blue-800',
            'bg-gray-100 text-gray-800',
            'bg-red-100 text-red-800',
            'bg-green-100 text-green-800',
            'bg-yellow-100 text-yellow-800',
            'bg-indigo-100 text-indigo-800',
            'bg-pink-100 text-pink-800',
            'bg-blue-100 text-blue-800',
            'bg-gray-100 text-gray-800',
            'bg-red-100 text-red-800',
            'bg-green-100 text-green-800',
            'bg-yellow-100 text-yellow-800',
            'bg-indigo-100 text-indigo-800',
            'bg-pink-100 text-pink-800',
        ];
        return colorClasses[Math.floor(Math.random() * colorClasses.length)];
    }

    function extractDomain(url) {
        let domain = url.replace(/^https?:\/\//, '').replace(/^www\./, '');
        domain = domain.split('/')[0];
        return domain;
    }
    %>
</body>
</html>